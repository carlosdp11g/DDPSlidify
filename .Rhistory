nosim <- 1000
cfunc <- function(x, n) sqrt(n) * (mean(x) - 5) / 5
dat <- data.frame(
x = c(apply(matrix(rexp(nosim * 40, 0.2),
nosim), 1, cfunc, 40)
),
g <- ggplot(dat, aes(x = x)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
+ stat_function(fun = dnorm, size = 2)
plot(g)
nosim <- 1000
cfunc <- function(x, n) sqrt(n) * (mean(x) - 5) / 5
dat <- data.frame(
x = c(apply(matrix(rexp(nosim * 40, 0.2),
nosim), 1, cfunc, 40)
),
g <- ggplot(dat, aes(x = x, y = ..density..)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
nosim <- 1000
cfunc <- function(x, n) sqrt(n) * (mean(x) - 5) / 5
dat <- data.frame(
x = c(apply(matrix(rexp(nosim * 20, 0.2),
nosim), 1, cfunc, 20),
apply(matrix(rexp(nosim * 30, 0.2),
nosim), 1, cfunc, 30),
apply(matrix(rexp(nosim * 40, 0.2),
nosim), 1, cfunc, 40)
),
size = factor(rep(c(20, 30, 40), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
nosim <- 1000
cfunc <- function(x, n) sqrt(n) * (mean(x) - 5) / 5
dat <- data.frame(
x = apply(matrix(rexp(nosim, 0.2),
nosim), 1, cfunc, 1),
size = factor(rep(c(1), nosim)))
g1 <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g1 <- g1 + stat_function(fun = dnorm, size = 2)
g1 + facet_grid(. ~ size)
g1 + geom_line(stat = "vline", xintercept = "mean")
g1 + geom_vline(xintercept = "mean")
g1 + geom_vline(xintercept = mean(..density..))
nosim <- 1000
cfunc <- function(x, n) sqrt(n) * (mean(x) - 5) / 5
dat <- data.frame(
x = c(apply(matrix(rexp(nosim * 20, 0.2),
nosim), 1, cfunc, 20),
apply(matrix(rexp(nosim * 30, 0.2),
nosim), 1, cfunc, 30),
apply(matrix(rexp(nosim * 40, 0.2),
nosim), 1, cfunc, 40)
),
size = factor(rep(c(20, 30, 40), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
str(dat)
library(dplyr)
group_by(dat, size) %>% summary(mean = mean(x))
tbl_df(dat) %>% group_by(size) %>% summary(mean = mean(x))
?chain
tbl_df(dat) %>% group_by(size) %>% summarize(mean = mean(x))
nosim <- 1000
cfunc <- function(x, n) sqrt(n) * (mean(x) - 5) / 5
dat <- data.frame(
x = c(
apply(matrix(rexp(nosim * 40, 0.2),
nosim), 1, cfunc, 40)
),
size = factor(rep(c(40), rep(nosim, 1))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
str(dat)
mean <- mean(dat$X)
mean <- mean(dat$x)
mean
lambda <- 0.2
1/lambda
comparison <- c(mean <- mean(dat$X), theo <- 1 / lambda)
comparison <- c(mean <- mean(dat$x), theo <- 1 / lambda)
comparison
cv <- c(variance <- sd(dat$x)^2, theo <- 1 / lambda)
cv
cv <- c(variance <- sd(dat$x)^2, theo <- (1 / lambda)^2)
cv
dat2 <- data.frame(
x = c(apply(matrix(rexp(nosim, 0.2), nosim), 1, cfunc, 1)),
size = factor(rep(c(1), rep(nosim, 1))))
g2 <- ggplot(dat2, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g2 <- g2 + stat_function(fun = dnorm, size = 2)
g2 + facet_grid(. ~ size)
install.packages("MiKTeX")
library(datasets)
?datasets
data(ToothGrowth)
data <- data.frame(ToothGrowth)
str(ToothGrowth)
?ToothGrowth
ToothGrowth$dose <- factor(ToothGrowth$dose)
str(ToothGrowth)
summary(ToothGrowth)
sd(ToothGrowth$len)
mean(ToothGrowth$len)
?hist
with(ToothGrowth, hist(len), col = "orange")
install.packages("knitr")
install.packages("markdown")
library(ggplot2)
plen <- ggplot(ToothGrowth)
plen <- plen + geom_hist(aes(len))
library(ggplot2)
plen <- ggplot(ToothGrowth)
plen <- plen + geom_histogram(aes(len))
print(plen)
library(ggplot2)
plen <- ggplot(ToothGrowth)
plen <- plen + geom_histogram(aes(len))
plen <- plen + labs(title = "Length of teeth of pigs based on dose levels and delivery methods")
plen <- plen + labs(xlab = "Teeth length")
plen <- plen + labs(ylab = "Frequency")
print(plne)
print(plen)
plen <- plen + labs(x = "Teeth length")
plen <- plen + labs(y = "Frequency")
print(plen)
?geom_line
plen <- ggplot(ToothGrowth)
plen <- plen + facet_grid(~ supp + dose)
plen <- plen + geom_line(aes(len))
plen <- plen + labs(title = "Length of teeth of pigs based on dose levels and delivery methods")
plen <- plen + labs(x = "Teeth length")
plen <- plen + labs(y = "Frequency")
print(plen)
plen <- ggplot(ToothGrowth)
plen <- plen + facet_grid(~ supp + dose)
plen <- plen + geom_line(aes(x = len))
plen <- plen + labs(title = "Length of teeth of pigs based on dose levels and delivery methods")
plen <- plen + labs(x = "Teeth length")
plen <- plen + labs(y = "Frequency")
print(plen)
plen <- ggplot(ToothGrowth)
plen <- plen + facet_grid(.~ supp + dose)
plen <- plen + geom_line(aes(x = len))
plen <- plen + labs(title = "Length of teeth of pigs based on dose levels and delivery methods")
plen <- plen + labs(x = "Teeth length")
plen <- plen + labs(y = "Frequency")
print(plen)
plen <- ggplot(ToothGrowth, aes(x = len))
plen <- plen + facet_grid(. ~ supp + dose)
plen <- plen + geom_line(aes(x = len))
plen <- plen + labs(title = "Length of teeth of pigs based on dose levels and delivery methods")
plen <- plen + labs(x = "Teeth length")
plen <- plen + labs(y = "Frequency")
print(plen)
plen <- ggplot(ToothGrowth)
plen <- plen + facet_grid(~ dose)
plen <- plen + geom_line(aes(len))
plen <- plen + labs(title = "Length of teeth of pigs based on dose levels and delivery methods")
plen <- plen + labs(x = "Teeth length")
plen <- plen + labs(y = "Frequency")
print(plen)
plen <- ggplot(ToothGrowth)
plen <- plen + facet_grid(. ~ dose)
plen <- plen + geom_line(aes(len))
plen <- plen + labs(title = "Length of teeth of pigs based on dose levels and delivery methods")
plen <- plen + labs(x = "Teeth length")
plen <- plen + labs(y = "Frequency")
print(plen)
plen <- ggplot(ToothGrowth)
plen <- plen + geom_line(aes(x = len, color = supp))
plen <- plen + labs(title = "Length of teeth of pigs based on dose levels and delivery methods")
plen <- plen + labs(x = "Teeth length")
plen <- plen + labs(y = "Frequency")
print(plen)
plen <- plen + geom_histogram(aes(x = len, color = supp))
rm(plen)
plen <- ggplot(ToothGrowth)
plen <- plen + facet_grid(~ dose)
plen <- plen + geom_histogram(aes(x = len, color = supp))
plen <- plen + labs(title = "Length of teeth of pigs based on dose levels and delivery methods")
plen <- plen + labs(x = "Teeth length")
plen <- plen + labs(y = "Frequency")
print(plen)
plen <- plen + scale_fill_discrete(name="Delivery method",
labels=c("Orange Juice", "Ascorbic acid"))
print(plen)
plen <- plen + scale_fill_discrete(name="Delivery method",
breaks=c("OJ", "VC"))
labels=c("Orange Juice", "Ascorbic acid"))
plen <- plen + scale_fill_discrete(name="Delivery method",
breaks=c("OJ", "VC"),
labels=c("Orange Juice", "Ascorbic acid"))
print(plen)
library(datasets) ; data(mtcars)
str(mtcars)
halfdose <- ToothGrowth[(ToothGrowth$dose == "0.5" & ToothGrowth$supp == "OJ"), ToothGrowth$len] - ToothGrowth[(ToothGrowth$dose == "0.5" & ToothGrowth$supp == "VC"), ToothGrowth$len]
str(ToothGrowth)
ToothGrowth[(ToothGrowth$dose == "0.5" & ToothGrowth$supp == "OJ"), ToothGrowth$len]
print.data.frame(ToothGrowth)
halfdose <- ToothGrowth$len[31:40, ] - ToothGrowth$len[1:10]
halfdose <- ToothGrowth[31:40, ToothGrowth$len] - ToothGrowth[1:10, ToothGrowth$len]
ToothGrowth[, ToothGrowth$len]
ToothGrowth[, len]
data <- ToothGrowth
data[, data$len]
str(data)
halfdose <- ToothGrowth[31:40, ] - ToothGrowth[1:10, ]
halfdose
halfdose <- halfdose[, halfdose$len]
halfdose <- halfdose[, len]
halfdose <- halfdose[, 1]
onedose <- ToothGrowth[41:50, ] - ToothGrowth[11:20, ]
onedose <- halfdose[, 1]
## Subtracting the values of orange juice minus those in Ascorbic acid, with a 2 dose.
twodose <- ToothGrowth[51:60, ] - ToothGrowth[21:30, ]
twodose <- halfdose[, 1]
halfdose <- ToothGrowth[31:40, ] - ToothGrowth[1:10, ]
halfdose <- halfdose[, 1]
## Subtracting the values of orange juice minus those in Ascorbic acid, with a 1 dose.
onedose <- ToothGrowth[41:50, ] - ToothGrowth[11:20, ]
onedose <- onedose[, 1]
## Subtracting the values of orange juice minus those in Ascorbic acid, with a 2 dose.
twodose <- ToothGrowth[51:60, ] - ToothGrowth[21:30, ]
twodose <- twodose[, 1]
t.test(halfdose)
t.test(halfdose)$conf
t.test(onedose)
t.test(twodose)
str(mtcars)
?mtcars
linear <- lm(mtcars$mpg ~ mtcars$cyl + mtcars$cyl + mtcars$hp + mtcars$drat + mtcars$wt)
library(datasets) ; data(mtcars)
str(mtcars)
pairs(mtcars)
mtcars$cyl <- factor(mtcars$cyl)
mtcars$vs <- factor(mtcars$vs)
mtcars$gear <- factor(mtcars$gear)
mtcars$carb <- factor(mtcars$carb)
mtcars$am <- factor(mtcars$am,labels=c('Automatic','Manual'))
str(mtcars)
pairs(mtcars)
lm1 <- lm(data = mtcars, mpg ~ .)
?aov
?anova
lm2 <- step(lm1, direction = "both")
summary(lm2)
par(mfrow=c(2,2)); plot(lm2)
t.test(mpg ~ am, data = mtcars)
?runif
?apply
data(mtcars)
str(mtcars)
mtcars$cyl <- factor(mtcars$cyl)
str(mtcars)
lm1 <- lm(mpg ~ cyl + wt)
lm1 <- lm(mpg ~ cyl + wt, data = mtcars)
summary(lm1)
lm1 <- lm(mpg ~ cyl6 + wt, data = mtcars)
?step
lm <- step(lm(mpg ~ ., data = mtcars))
summary(lm)
rm(lm)
rm(lm1)
rm(lm2)
lm1 <- lm(mpg ~ wt + cyl, data = mtcars)
summary(lm1)
table(mtcars$cyl)
library(swirl)
swirl()
plot(child ~ parent, galton)
plot(jitter(child, 4) ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3, col='red')
summary(regrline)
bye()
swirl()
library(ggplo2)
library(ggplot2)
g <- ggplot(mtcars, wt + cyl)
str(mtcars)
g <- ggplot(mtcars, aes(y = mpg, x = wt + cyl))
plot(g)
g <- g + facet_grid(. ~ cyl)
rm(g)
g <- ggplot(mtcars, aes(y = mpg, x = wt + cyl))
g <- g + geom_point(aes(color = cyl))
with(mtcars, plot(mpg ~ wt))
with(mtcars, plot(mpg ~ wt + cyl))
rm(g)
g <- ggplot(mtcars, aes(y = mpg, x = wt))
g <- g + geom_point(aes(color = cyl))
print(g)
h <- ggplot(mtcars, aes(y = mpg))
h <- h + geom_point(aes(color = cyl))
print(h)
g <- g + geom_hline(mean(mtcars[mtcars$cyl == '4', mtcars$mpg]))
g <- g + geom_hline(mean(mtcars[mtcars$cyl == '4', mtcars[1]]))
g <- g + geom_line(lm(mpg ~ cyl, mtcars))
g <- g + geom_line(aes(lm(mpg ~ cyl, mtcars)))
plot(g)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
plot(y ~ x)
abline(lm(y ~ x))
?hatvalues
hatvalues(lm(y ~ x))
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
dfbeta(lm(y ~ x))
dfbeta(lm(x ~ y))
dfbetas(lm(y ~ x))
library(swirl)
swirl()
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
(z * 2 + 1000)
(z * 2 + 1000)
(z * 2 + 100)
(z * 2 + 1000)
next
next()
info()
skip()
my_div
1 - 3/36
deck
13 * 4
4/52
0
12 / 52
2/51
1.6*0.8/2
0.64
mypdf
?integrate
integrate(mypdf, 0, 1.6)
0.8
sqrt(2)
(x^2)/4 = .5
swirl()
1.6*8/2
1.6*.8/2
1.6*.8/2
mypdf
integrate(mypdf, 0, 1.6)
sqrt(2)
p1 <- data.frame(nrow = 5, ncol = 3)
p1 <- c(1, 140,	132,
2,	138,	135,
3,	150,	151,
4,	148,	146,
5,	135,	130)
p1
temp <- p1
p1 <- matrix(p1, nrow = 5, ncol = 3)
p1
?matrix
p1 <- matrix(p1, nrow = 5, ncol = 3, byrow = TRUE)
p1
names(p1) <- c("Subject", "Baseline", "Week ")
names(p1) <- c("Subject", "Baseline", "Week 2")
p1
p1 <- matrix(p1, nrow = 5, ncol = 3, byrow = TRUE)
temp <- p1
p1 <- data.frame(p1)
names(p1) <- c("Subject", "Baseline", "Week 2")
p1
p1 <- data.frame(p1, byrow = TRUE)
names(p1) <- c("Subject", "Baseline", "Week 2")
p1
rm(p1)
temp
temp <- matrix(p1, nrow = 5, ncol = 3, byrow = TRUE)
temp <- matrix(temp, nrow = 5, ncol = 3, byrow = TRUE)
temp
temp <- c(1,    140,	132,
2,	138,	135,
3,	150,	151,
4,	148,	146,
5,	135,	130,)
temp <- c(1,    140,	132,
2,	138,	135,
3,	150,	151,
4,	148,	146,
5,	135,	130)
temp
temp <- matrix(temp, nrow = 5, ncol = 3, byrow = TRUE)
temp
p1 <- temp
names(p1) <- c("Subject", "Baseline", "Week 2")
p1
rm(p1)
p1 <- data.frame(temp)
p2
p1
names(p1) <- c("Subject", "Baseline", "Week 2")
p1
?t.test
t.test(p1, alternative = "two.sided", paired = TRUE)
t.test(p1[, "Baseline"], p1[, "Week 2"] alternative = "two.sided", paired = TRUE)
t.test(p1[, 2], p1[, 3] alternative = "two.sided", paired = TRUE)
p1[, 2]
t.test(x = p1[, 2], y = p1[, 3] alternative = "two.sided", paired = TRUE)
equis <- p1[, 2]
ye <- p1[, 3]
t.test(x = p1[, 2], y = p1[, 3], alternative = "two.sided", paired = TRUE)
rm(equis, ye)
?power.t.test
library(swirl)
swirl()
install.packages("Rtools")
library(shiny)
install.packages("shiny")
library(swirl)
install.packages("swirl")
source('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP/ui.R')
source('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP/server.R')
library(shiny)
shiny::runApp('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP')
shiny::runApp('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP')
source('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP/server.R')
shiny::runApp('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP')
source('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP/server.R')
shiny::runApp('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP')
difftime(2015-06-01, 2015-06-30, units = "weeks")
datea <- as.Date("2015-06-01")
dateb <- as.Date("2015-06-30")
class(datea)
difftime(datea, dateb, units = "weeks")
difftime(dateb, datea, units = "weeks")
?trunc
trunc(difftime(dateb, datea, units = "weeks"))
x <- trunc(difftime(dateb, datea, units = "weeks"))
class(x)
x <- as.numeric(trunc(difftime(dateb, datea, units = "weeks")))
x
source('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP/server.R')
shiny::runApp('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP')
source('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP/server.R')
source('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP/server.R')
shiny::runApp('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP')
shiny::runApp('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP')
_?seq
?seq
seq(datea, dateb)
weekdays(seq(datea, date ))
weekdays(seq(datea, dateb))
weekdays(seq(datea, dateb, by = "days"))
seq(datea, dateb, by = "days")
dif <- weekdays(seq(datea, dateb, by = "days"))
wd <- dif
rm(dif)
dif <- wd[sum(-which(wd %in% c("Saturday", "Sunday")))]
dif <- sum(-which(wd %in% c("Saturday", "Sunday")))
sum(-which(wd %in% c("Saturday", "Sunday")))
sapply(wd, function(wd) {-which(wd %in% c("Saturday", "Sunday")}))
sapply(wd, function(wd) {-which(wd %in% c("Saturday", "Sunday"))})
length(weekdays(seq(datea, dateb, by = "days")))
length(wd[-(wd %in% c("sábado", "domingo"))])
wd[-(wd %in% c("sábado", "domingo"))]
wd
wd[c("lunes", "martes", "miércoles", "jueves", "viernes")]
class)wd
class(wd)
entresemana <- c("lunes", "martes", "miércoles", "jueves", "viernes")
wd[entresemana]
class(wd[1])
str(wd)
wd[entresemana]
wd[wd %in% entresemana]
wd[-(wd %in% c("sábado", "domingo"))]
wd[wd %in% entresemana]
source('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP/server.R')
shiny::runApp('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP')
source('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP/server.R')
shiny::runApp('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP')
shiny::runApp('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP')
source('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP/ui.R')
shiny::runApp('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP')
source('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP/ui.R')
shiny::runApp('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP')
shiny::runApp('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP')
source.with.encoding('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP/ui.R', encoding='UTF-8')
source.with.encoding('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP/server.R', encoding='UTF-8')
shiny::runApp('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP')
shiny::runApp('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP')
shiny::runApp('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP')
install.packages("shin")
install.packages("shiny")
install.packages("shiny")
shiny::runApp('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP')
source.with.encoding('C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP/server.R', encoding='UTF-8')
install.packages("slidify")
install.packages("devtools")
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
library(slidify)
setwd("C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP")
setwd("C:/Users/CarlosDaniel/SkyDrive/Documentos/Tec de Monterrey/zCoursera/9. Developing Data Products/W3/DDPCP/slidify")
author("DDPCPSlidify")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
install.packages("manipulate")
